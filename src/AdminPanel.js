import React, { useState, useEffect } from 'react';
import './AdminPanel.css';

const ADMIN_PASSWORD = 'Feyero2024!@#$Secure';

const AdminPanel = () => {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [password, setPassword] = useState('');
  const [activeTab, setActiveTab] = useState('chats');
  const [chats, setChats] = useState([]);
  const [analytics, setAnalytics] = useState(null);
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(false);
  const [digestLoading, setDigestLoading] = useState(false);
  const [selectedPeriod, setSelectedPeriod] = useState('week'); // week, month, year, all
  const [selectedChat, setSelectedChat] = useState(null);
  const [chatMessages, setChatMessages] = useState([]);
  const [chatCounts, setChatCounts] = useState({});
  const [visitorMetric, setVisitorMetric] = useState('ip'); // ip | session | hybrid

  const handleLogin = (e) => {
    e.preventDefault();
    if (password === ADMIN_PASSWORD) {
      setIsAuthenticated(true);
      fetchChats();
      fetchAnalytics();
      fetchOrders();
    } else {
      alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!');
    }
  };

  const fetchChats = async () => {
    try {
      const response = await fetch('https://svadba2.onrender.com/api/chats');
      const data = await response.json();
      setChats(data);
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
      const counts = {};
      for (const chat of data) {
        try {
          const countResponse = await fetch(`https://svadba2.onrender.com/api/messages/${chat._id}/count`);
          const countData = await countResponse.json();
          counts[chat._id] = countData.total;
        } catch (error) {
          console.error('Error fetching chat count:', error);
          counts[chat._id] = 0;
        }
      }
      setChatCounts(counts);
    } catch (error) {
      console.error('Error fetching chats:', error);
    }
  };

  const fetchOrders = async () => {
    try {
      const response = await fetch('https://svadba2.onrender.com/api/orders');
      const data = await response.json();
      setOrders(data);
    } catch (error) {
      console.error('Error fetching orders:', error);
    }
  };

  const fetchAnalytics = async () => {
    setLoading(true);
    try {
      const response = await fetch(`https://svadba2.onrender.com/api/analytics?period=${selectedPeriod}`);
      const data = await response.json();
      setAnalytics(data);
    } catch (error) {
      console.error('Error fetching analytics:', error);
    } finally {
      setLoading(false);
    }
  };

  const sendTelegramDigest = async () => {
    try {
      setDigestLoading(true);
      const resp = await fetch('https://svadba2.onrender.com/internal/daily-digest', { method: 'POST' });
      if (!resp.ok) throw new Error('Request failed');
      alert('–û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
    } catch (e) {
      console.error('Digest send error:', e);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ADMIN_TELEGRAM_ID –Ω–∞ –±—ç–∫–µ–Ω–¥–µ.');
    } finally {
      setDigestLoading(false);
    }
  };

  const fetchChatMessages = async (chatId) => {
    try {
      const response = await fetch(`https://svadba2.onrender.com/api/messages/${chatId}`);
      const data = await response.json();
      setChatMessages(data);
      setSelectedChat(chatId);
    } catch (error) {
      console.error('Error fetching chat messages:', error);
    }
  };

  const deleteMessage = async (messageId) => {
    try {
      await fetch(`https://svadba2.onrender.com/api/messages/${messageId}`, {
        method: 'DELETE'
      });
      fetchChats();
      if (selectedChat) {
        fetchChatMessages(selectedChat);
      }
    } catch (error) {
      console.error('Error deleting message:', error);
    }
  };

  const formatNumber = (num) => {
    if (num >= 1000000) {
      return (num / 1000000).toFixed(1) + 'M';
    } else if (num >= 1000) {
      return (num / 1000).toFixed(1) + 'K';
    }
    return num.toString();
  };

  const formatDuration = (ms) => {
    const seconds = Math.floor(ms / 1000);
    const minutes = Math.floor(seconds / 60);
    const hours = Math.floor(minutes / 60);
    const days = Math.floor(hours / 24);

    if (days > 0) return `${days}–¥ ${hours % 24}—á`;
    if (hours > 0) return `${hours}—á ${minutes % 60}–º`;
    if (minutes > 0) return `${minutes}–º ${seconds % 60}—Å`;
    return `${seconds}—Å`;
  };

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const getDeviceIcon = (deviceType) => {
    switch (deviceType) {
      case 'mobile': return 'üì±';
      case 'tablet': return 'üì±';
      case 'desktop': return 'üíª';
      default: return 'üñ•Ô∏è';
    }
  };

  const getPeriodLabel = () => {
    switch (selectedPeriod) {
      case 'week': return '–ø–æ—Å–ª–µ–¥–Ω—è—è –Ω–µ–¥–µ–ª—è';
      case 'month': return '–ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü';
      case 'year': return '–ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥';
      case 'all': return '–≤—Å–µ –≤—Ä–µ–º—è';
      default: return '–ø–æ—Å–ª–µ–¥–Ω—è—è –Ω–µ–¥–µ–ª—è';
    }
  };

  const calculateGrowth = (current, previous) => {
    if (!previous || previous === 0) return 0;
    return ((current - previous) / previous * 100).toFixed(1);
  };

  const renderAnalytics = () => {
    if (!analytics) return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...</div>;

    const {
      overview,
      pageViews,
      devices,
      popularPages,
      buttonClicks,
      conversions,
      productViews,
      chatEngagement,
      userSessions,
      trends,
      topReferrers,
      browserStats,
      osStats,
      hourlyActivity,
      weeklyActivity,
      detailsPage
    } = analytics;

  return (
      <div className="analytics-container">
        {/* –ü–µ—Ä–∏–æ–¥ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ */}
        <div className="analytics-header">
          <div className="period-selector">
            <label>–ü–µ—Ä–∏–æ–¥:</label>
            <select value={selectedPeriod} onChange={(e) => {
              setSelectedPeriod(e.target.value);
              setTimeout(fetchAnalytics, 100);
            }}>
              <option value="week">–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–µ–¥–µ–ª—è</option>
              <option value="month">–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü</option>
              <option value="year">–ü–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥</option>
              <option value="all">–í—Å–µ –≤—Ä–µ–º—è</option>
            </select>
          </div>
          <div className="period-selector">
            <label>–ú–µ—Ç—Ä–∏–∫–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π:</label>
            <select value={visitorMetric} onChange={(e) => setVisitorMetric(e.target.value)}>
              <option value="ip">–ü–æ IP</option>
              <option value="session">–ü–æ sessionId</option>
              <option value="hybrid">–ì–∏–±—Ä–∏–¥</option>
            </select>
          </div>
          <button onClick={fetchAnalytics} className="refresh-btn" disabled={loading}>
            {loading ? 'üîÑ' : 'üîÑ'} –û–±–Ω–æ–≤–∏—Ç—å
          </button>
          <button onClick={sendTelegramDigest} className="refresh-btn" disabled={digestLoading} title="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—É—Ç–æ—á–Ω—ã–π –æ—Ç—á—ë—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ Telegram">
            {digestLoading ? 'üì®' : 'üì®'} –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç –≤ TG
          </button>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
        <div className="metrics-grid">
          <div className="metric-card primary">
            <div className="metric-icon">üë•</div>
            <div className="metric-content">
              <h3>–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏</h3>
              <div className="metric-value">
                {formatNumber(
                  visitorMetric === 'ip' ? (overview.visitorsBreakdown?.byIp || overview.totalVisitors) :
                  visitorMetric === 'session' ? (overview.visitorsBreakdown?.bySession || overview.totalVisitors) :
                  (overview.visitorsBreakdown?.hybrid || overview.totalVisitors)
                )}
              </div>
              <div className="metric-change positive">
                +{calculateGrowth(overview.totalVisitors, overview.previousVisitors)}% vs –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–µ—Ä–∏–æ–¥
              </div>
            </div>
          </div>

          <div className="metric-card primary">
            <div className="metric-icon">üìÑ</div>
            <div className="metric-content">
              <h3>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</h3>
              <div className="metric-value">{formatNumber(overview.totalPageViews)}</div>
              <div className="metric-change positive">
                +{calculateGrowth(overview.totalPageViews, overview.previousPageViews)}% vs –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–µ—Ä–∏–æ–¥
              </div>
            </div>
          </div>

          <div className="metric-card primary">
            <div className="metric-icon">üí¨</div>
            <div className="metric-content">
              <h3>–ß–∞—Ç—ã</h3>
              <div className="metric-value">{formatNumber(overview.totalChats)}</div>
              <div className="metric-change positive">
                +{calculateGrowth(overview.totalChats, overview.previousChats)}% vs –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–µ—Ä–∏–æ–¥
              </div>
            </div>
          </div>

          <div className="metric-card primary">
            <div className="metric-icon">üéØ</div>
            <div className="metric-content">
              <h3>–ö–æ–Ω–≤–µ—Ä—Å–∏–∏</h3>
              <div className="metric-value">{formatNumber(overview.totalConversions)}</div>
              <div className="metric-change positive">
                +{calculateGrowth(overview.totalConversions, overview.previousConversions)}% vs –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–µ—Ä–∏–æ–¥
              </div>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
        <div className="metrics-grid secondary">
          <div className="metric-card">
            <div className="metric-icon">‚è±Ô∏è</div>
            <div className="metric-content">
              <h3>–í—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ</h3>
              <div className="metric-value">{formatDuration(overview.avgSessionDuration)}</div>
              <div className="metric-subtitle">–≤ —Å—Ä–µ–¥–Ω–µ–º</div>
            </div>
          </div>

          <div className="metric-card">
            <div className="metric-icon">üì±</div>
            <div className="metric-content">
              <h3>–ú–æ–±–∏–ª—å–Ω—ã–µ</h3>
              <div className="metric-value">{overview.mobilePercentage}%</div>
              <div className="metric-subtitle">–æ—Ç –≤—Å–µ—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</div>
            </div>
          </div>

          <div className="metric-card">
            <div className="metric-icon">üîÑ</div>
            <div className="metric-content">
              <h3>–í–æ–∑–≤—Ä–∞—Ç—ã</h3>
              <div className="metric-value">{overview.bounceRate}%</div>
              <div className="metric-subtitle">–ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–∫–∞–∑–æ–≤</div>
            </div>
          </div>

          <div className="metric-card">
            <div className="metric-icon">üìà</div>
            <div className="metric-content">
              <h3>–°—Ç—Ä–∞–Ω–∏—Ü/—Å–µ—Å—Å–∏—è</h3>
              <div className="metric-value">{overview.pagesPerSession}</div>
              <div className="metric-subtitle">–≤ —Å—Ä–µ–¥–Ω–µ–º</div>
            </div>
          </div>

          <div className="metric-card">
            <div className="metric-icon">üîÑ</div>
            <div className="metric-content">
              <h3>–°–µ—Å—Å–∏–π/–ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å</h3>
              <div className="metric-value">
                {userSessions.total > 0 ? (userSessions.totalSessions / userSessions.total).toFixed(1) : 0}
              </div>
              <div className="metric-subtitle">–≤ —Å—Ä–µ–¥–Ω–µ–º</div>
            </div>
          </div>
        </div>

        {/* –î–µ—Ç–∞–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" */}
        <div className="analytics-section">
          <h2>üß© –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ("–ü–æ–¥—Ä–æ–±–Ω–µ–µ") ‚Äî –∑–∞ –ø–µ—Ä–∏–æ–¥</h2>
          {detailsPage ? (
            <div className="metrics-grid secondary">
              <div className="metric-card">
                <div className="metric-icon">üëÅÔ∏è</div>
                <div className="metric-content">
                  <h3>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</h3>
                  <div className="metric-value">{formatNumber(detailsPage.views || 0)}</div>
                </div>
              </div>
              <div className="metric-card">
                <div className="metric-icon">‚≠ê</div>
                <div className="metric-content">
                  <h3>–†–µ–π—Ç–∏–Ω–≥</h3>
                  <div className="metric-value">{detailsPage.ratings?.avg || 0} / 5</div>
                  <div className="metric-subtitle">–æ—Ü–µ–Ω–æ–∫: {formatNumber(detailsPage.ratings?.count || 0)}</div>
                </div>
              </div>
              <div className="metric-card">
                <div className="metric-icon">üì©</div>
                <div className="metric-content">
                  <h3>–ö–ª–∏–∫–∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–æ–≤</h3>
                  <div className="metric-value">TG {formatNumber(detailsPage.clicks?.telegram || 0)} | WA {formatNumber(detailsPage.clicks?.whatsapp || 0)}</div>
                  {typeof detailsPage.clicks?.ctr === 'number' && (
                    <div className="metric-subtitle">CTR –ø–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞–º: {detailsPage.clicks.ctr}%</div>
                  )}
                </div>
              </div>
              <div className="metric-card">
                <div className="metric-icon">üõí</div>
                <div className="metric-content">
                  <h3>–ü–µ—Ä–µ—Ö–æ–¥–æ–≤ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é</h3>
                  <div className="metric-value">{formatNumber(detailsPage.orderStarts || 0)}</div>
                  {typeof detailsPage.ctr === 'number' && (
                    <div className="metric-subtitle">CTR –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: {detailsPage.ctr}%</div>
                  )}
                </div>
              </div>
              <div className="metric-card">
                <div className="metric-icon">‚è±Ô∏è</div>
                <div className="metric-content">
                  <h3>–í—Ä–µ–º—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ</h3>
                  <div className="metric-value">{detailsPage.avgTimeSec || 0}s</div>
                </div>
              </div>
              <div className="metric-card">
                <div className="metric-icon">üß™</div>
                <div className="metric-content">
                  <h3>–û–ø—Ä–æ—Å–Ω–∏–∫ (–º–æ–¥–∞–ª)</h3>
                  <div className="metric-value">–ó–∞–∫—Ä—ã–ª–∏: {formatNumber(detailsPage.survey?.closed || 0)}</div>
                  <div className="metric-subtitle">–ü—Ä–∏—á–∏–Ω—ã:</div>
                  <div className="metric-subtitle">
                    {(detailsPage.survey?.reasons && Object.keys(detailsPage.survey.reasons).length > 0)
                      ? Object.entries(detailsPage.survey.reasons).map(([k,v]) => (
                          <span key={k} style={{marginRight:8}}>{k}: {formatNumber(v)}</span>
                        ))
                      : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
                  </div>
                  <div className="metric-subtitle">–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:</div>
                  <div className="metric-subtitle">
                    {(detailsPage.survey?.feedback && Object.keys(detailsPage.survey.feedback).length > 0)
                      ? Object.entries(detailsPage.survey.feedback).map(([k,v]) => (
                          <span key={k} style={{marginRight:8}}>{k}: {formatNumber(v)}</span>
                        ))
                      : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
                  </div>
                </div>
              </div>
              <div className="metric-card">
                <div className="metric-icon">‚ùì</div>
                <div className="metric-content">
                  <h3>–ú–∏–Ω–∏-–æ–ø—Ä–æ—Å—ã</h3>
                  <div className="metric-subtitle">–ü–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è:</div>
                  <div className="metric-value">–î–∞ {formatNumber(detailsPage.polls?.wouldOrder?.yes || 0)} | –ù–µ—Ç {formatNumber(detailsPage.polls?.wouldOrder?.no || 0)}</div>
                  <div className="metric-subtitle">–•–æ—Ç–µ–ª–∏ –±—ã –Ω–∞ —Å–≤–∞–¥—å–±–µ:</div>
                  <div className="metric-value">–î–∞ {formatNumber(detailsPage.polls?.wouldHave?.yes || 0)} | –ü–æ–¥—É–º–∞—é {formatNumber(detailsPage.polls?.wouldHave?.no || 0)}</div>
                </div>
              </div>
            </div>
          ) : (
            <div className="no-data">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>
          )}
        </div>

        {/* –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ */}
        <div className="analytics-section">
          <h2>üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ({getPeriodLabel()})</h2>
          <div className="devices-grid">
            {devices.map((device, index) => (
              <div key={index} className="device-card">
                <div className="device-icon">{getDeviceIcon(device.type)}</div>
                <div className="device-info">
                  <h3>{device.type === 'mobile' ? '–ú–æ–±–∏–ª—å–Ω—ã–µ' : device.type === 'tablet' ? '–ü–ª–∞–Ω—à–µ—Ç—ã' : '–î–µ—Å–∫—Ç–æ–ø—ã'}</h3>
                  <div className="device-stats">
                    <div className="device-percentage">{device.percentage}%</div>
                    <div className="device-count">{formatNumber(device.count)} –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</div>
                  </div>
                </div>
                <div className="device-bar">
                  <div className="device-bar-fill" style={{ width: `${device.percentage}%` }}></div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="analytics-section">
          <h2>üìÑ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ({getPeriodLabel()})</h2>
          <div className="pages-list">
            {popularPages.map((page, index) => (
              <div key={index} className="page-item">
                <div className="page-rank">#{index + 1}</div>
                <div className="page-info">
                  <div className="page-name">{page.name}</div>
                  <div className="page-path">{page.path}</div>
                </div>
                <div className="page-stats">
                  <div className="page-views">{formatNumber(page.views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
                  <div className="page-percentage">{page.percentage}%</div>
                </div>
                <div className="page-bar">
                  <div className="page-bar-fill" style={{ width: `${page.percentage}%` }}></div>
                </div>
            </div>
          ))}
        </div>
      </div>

        {/* –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ —Ä–µ–∫–ª–∞–º–∞ */}
        <div className="analytics-section">
          <h2>üì¢ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ —Ä–µ–∫–ª–∞–º–∞ ({getPeriodLabel()})</h2>
          <div className="marketing-grid">
            {/* –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ */}
            <div className="marketing-card">
              <h3>üåê –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞</h3>
              <div className="traffic-sources">
                {topReferrers.map((ref, idx) => (
                  <div key={idx} className="traffic-source-item">
                    <div className="source-info">
                      <span className="source-name">{ref.source}</span>
                      <span className="source-url">{ref.url !== '-' ? ref.url : '–ü—Ä—è–º—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã'}</span>
                    </div>
                    <div className="source-stats">
                      <span className="source-visits">{formatNumber(ref.visits)}</span>
                      <span className="source-percentage">{ref.percentage}%</span>
                    </div>
                    <div className="progress-bar">
                      <div className="progress-fill" style={{width: `${ref.percentage}%`}}></div>
                    </div>
                  </div>
                ))}
                
                {/* UTM-–º–µ—Ç–∫–∏ */}
                {analytics.utmStats && Object.keys(analytics.utmStats).length > 0 && (
                  <div className="utm-section">
                    <h4>üìä UTM-–º–µ—Ç–∫–∏</h4>
                    {Object.entries(analytics.utmStats)
                      .sort(([,a], [,b]) => b - a)
                      .slice(0, 5)
                      .map(([key, count], idx) => {
                        const [source, medium, campaign] = key.split(':');
                        return (
                          <div key={idx} className="utm-item">
                            <div className="utm-info">
                              <span className="utm-source">{source}</span>
                              <span className="utm-medium">{medium}</span>
                              <span className="utm-campaign">{campaign}</span>
                            </div>
                            <span className="utm-count">{count}</span>
                          </div>
                        );
                      })}
                  </div>
                )}
              </div>
            </div>

            {/* –†–µ–∫–ª–∞–º–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã */}
            <div className="marketing-card">
              <h3>üì± –†–µ–∫–ª–∞–º–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h3>
              <div className="platform-stats">
                {analytics.adPlatforms && Object.values(analytics.adPlatforms).some(platform => platform.count > 0) ? (
                  Object.entries(analytics.adPlatforms)
                    .filter(([, platform]) => platform.count > 0)
                    .map(([key, platform]) => (
                      <div key={key} className="platform-item">
                        <div className="platform-icon">
                          {key === 'vk' ? 'üìò' : 
                           key === 'yandex' ? 'üîç' : 
                           key === 'google' ? 'üîé' : 
                           key === 'instagram' ? 'üì∑' : 
                           key === 'facebook' ? 'üìò' : 'üì±'}
                        </div>
                        <div className="platform-info">
                          <span className="platform-name">{platform.name}</span>
                          <span className="platform-metric">
                            {platform.campaigns.length > 0 
                              ? `${platform.campaigns.length} –∫–∞–º–ø–∞–Ω–∏–π` 
                              : '–†–µ–∫–ª–∞–º–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã'}
                          </span>
                  </div>
                        <div className="platform-data">
                          <span className="platform-value">{platform.count}</span>
                          <span className="platform-label">–∫–ª–∏–∫–æ–≤</span>
                  </div>
                </div>
              ))
            ) : (
                  <div className="no-data">
                    –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏—è—Ö
                    <br />
                    <small>–î–∞–Ω–Ω—ã–µ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ UTM-–º–µ—Ç–æ–∫</small>
                  </div>
                )}
                
                {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ */}
                <div className="setup-instructions">
                  <h4>üîß –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ:</h4>
                  <div className="instruction-item">
                    <strong>VK:</strong> –î–æ–±–∞–≤—å—Ç–µ –≤ —Å—Å—ã–ª–∫–∏: <code>?utm_source=vk&utm_medium=banner&utm_campaign=–Ω–∞–∑–≤–∞–Ω–∏–µ</code>
                  </div>
                  <div className="instruction-item">
                    <strong>–Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç:</strong> <code>?utm_source=yandex&utm_medium=cpc&utm_campaign=–Ω–∞–∑–≤–∞–Ω–∏–µ</code>
                  </div>
                  <div className="instruction-item">
                    <strong>Google Ads:</strong> <code>?utm_source=google&utm_medium=cpc&utm_campaign=–Ω–∞–∑–≤–∞–Ω–∏–µ</code>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* SEO –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
        <div className="analytics-section">
          <h2>üîç SEO –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ({getPeriodLabel()})</h2>
          <div className="seo-grid">
            {/* –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã */}
            <div className="seo-card">
              <h3>üîé –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã</h3>
              <div className="search-queries">
                {analytics.searchQueriesList && analytics.searchQueriesList.length > 0 ? (
                  analytics.searchQueriesList.map((query, idx) => (
                    <div key={idx} className="query-item">
                      <span className="query-text">{query.query}</span>
                      <span className="query-count">{query.count}</span>
                    </div>
                  ))
                ) : (
                  <div className="no-data">
                    –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
                    <br />
                    <small>–î–∞–Ω–Ω—ã–µ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</small>
                  </div>
                )}
                
                {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é SEO */}
                <div className="setup-instructions">
                  <h4>üîß –ö–∞–∫ —É–ª—É—á—à–∏—Ç—å SEO:</h4>
                  <div className="instruction-item">
                    <strong>–ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã:</strong> –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–∞-—Ç–µ–≥–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç
                  </div>
                  <div className="instruction-item">
                    <strong>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ PageSpeed Insights –∏ Lighthouse
                  </div>
                </div>
              </div>
            </div>

            {/* –í–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏ */}
            <div className="seo-card">
              <h3>üîó –í–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏</h3>
              <div className="backlinks">
                {analytics.backlinks && analytics.backlinks.length > 0 ? (
                  analytics.backlinks.map((link, idx) => (
                    <div key={idx} className="backlink-item">
                      <span className="backlink-domain">{link.domain}</span>
                      <span className="backlink-count">{link.count}</span>
                    </div>
                  ))
                ) : (
                  <div className="no-data">
                    –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤–Ω–µ—à–Ω–∏—Ö —Å—Å—ã–ª–∫–∞—Ö
                    <br />
                    <small>–î–∞–Ω–Ω—ã–µ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</small>
                  </div>
                )}
                
                {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤–Ω–µ—à–Ω–∏–º —Å—Å—ã–ª–∫–∞–º */}
                <div className="setup-instructions">
                  <h4>üîß –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –≤–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏:</h4>
                  <div className="instruction-item">
                    <strong>–ì–æ—Å—Ç–µ–≤—ã–µ –ø–æ—Å—Ç—ã:</strong> –ü—É–±–ª–∏–∫—É–π—Ç–µ—Å—å –Ω–∞ —Å–≤–∞–¥–µ–±–Ω—ã—Ö –±–ª–æ–≥–∞—Ö
                  </div>
                  <div className="instruction-item">
                    <strong>–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞:</strong> –°–æ—Ç—Ä—É–¥–Ω–∏—á–∞–π—Ç–µ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞–º–∏ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º–∏
                  </div>
                </div>
              </div>
            </div>

            {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ */}
            <div className="seo-card">
              <h3>‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏</h3>
              <div className="tech-metrics">
                {analytics.pageSpeed || analytics.coreWebVitals || analytics.performanceIndex ? (
                  <>
                    {analytics.pageSpeed && (
                      <div className="metric-row">
                        <span className="metric-label">–°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏</span>
                        <span className="metric-value">
                          –ë—ã—Å—Ç—Ä–æ: {analytics.pageSpeed.fast || 0} | 
                          –°—Ä–µ–¥–Ω–µ: {analytics.pageSpeed.medium || 0} | 
                          –ú–µ–¥–ª–µ–Ω–Ω–æ: {analytics.pageSpeed.slow || 0}
                        </span>
                      </div>
                    )}
                    {analytics.coreWebVitals && (
                      <div className="metric-row">
                        <span className="metric-label">Core Web Vitals</span>
                        <span className="metric-value">
                          {Object.values(analytics.coreWebVitals).some(v => v.good > 0) ? '‚úÖ –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã' : '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
                        </span>
                      </div>
                    )}
                    {analytics.performanceIndex && (
                      <div className="metric-row">
                        <span className="metric-label">–ò–Ω–¥–µ–∫—Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</span>
                        <span className="metric-value">{analytics.performanceIndex}/100</span>
                      </div>
                    )}
                  </>
                ) : (
                  <div className="no-data">
                    –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö
                    <br />
                    <small>–î–∞–Ω–Ω—ã–µ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</small>
                  </div>
                )}
                
                {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –º–µ—Ç—Ä–∏–∫–∞–º */}
                <div className="setup-instructions">
                  <h4>üîß –ö–∞–∫ —É–ª—É—á—à–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏:</h4>
                  <div className="instruction-item">
                    <strong>Page Speed:</strong> –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ CDN
                  </div>
                  <div className="instruction-item">
                    <strong>Core Web Vitals:</strong> –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ JavaScript –∏ CSS
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –ö–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º */}
        <div className="analytics-section">
          <h2>üñ±Ô∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ ({getPeriodLabel()})</h2>
          <div className="buttons-grid">
            {buttonClicks.map((button, index) => (
              <div key={index} className="button-card">
                <div className="button-rank">#{index + 1}</div>
                <div className="button-info">
                  <h3>{button.text}</h3>
                  <div className="button-id">{button.id}</div>
                </div>
                <div className="button-stats">
                  <div className="button-clicks">{formatNumber(button.clicks)} –∫–ª–∏–∫–æ–≤</div>
                  <div className="button-percentage">{button.percentage}%</div>
                </div>
                <div className="button-bar">
                  <div className="button-bar-fill" style={{ width: `${button.percentage}%` }}></div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –ö–æ–Ω–≤–µ—Ä—Å–∏–∏ */}
        <div className="analytics-section">
          <h2>üéØ –ö–æ–Ω–≤–µ—Ä—Å–∏–∏ ({getPeriodLabel()})</h2>
          <div className="conversions-grid">
            {conversions.map((conversion, index) => (
              <div key={index} className="conversion-card">
                <div className="conversion-icon">
                  {conversion.action === 'chat_opened' ? 'üí¨' :
                   conversion.action === 'telegram_clicked' ? 'üì±' :
                   conversion.action === 'whatsapp_clicked' ? 'üìû' :
                   conversion.action === 'order_page_visited' ? 'üõí' :
                   conversion.action === 'lead_submit_whatsapp' ? 'üìù' :
                   conversion.action === 'lead_submit_telegram' ? 'üìù' :
                   conversion.action === 'lead_modal_open' ? 'üìã' :
                   conversion.action === 'lead_backend_success' ? '‚úÖ' :
                   conversion.action === 'lead_backend_error' ? '‚ùå' :
                   conversion.action === 'bot_start' ? 'ü§ñ' :
                   conversion.action === 'lead_processed' ? 'üîó' :
                   conversion.action === 'admin_leads_request' ? 'üë®‚Äçüíº' :
                   conversion.action === 'bot_interaction' ? 'üîÑ' :
                   conversion.action === 'bot_text_message' ? 'üí¨' :
                   'üéØ'}
                </div>
                <div className="conversion-info">
                  <h3>
                    {conversion.action === 'chat_opened' ? '–û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞' :
                     conversion.action === 'telegram_clicked' ? '–ö–ª–∏–∫ Telegram' :
                     conversion.action === 'whatsapp_clicked' ? '–ö–ª–∏–∫ WhatsApp' :
                     conversion.action === 'order_page_visited' ? '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫–∞–∑–∞' :
                     conversion.action === 'lead_submit_whatsapp' ? '–ó–∞—è–≤–∫–∞ WhatsApp' :
                     conversion.action === 'lead_submit_telegram' ? '–ó–∞—è–≤–∫–∞ Telegram' :
                     conversion.action === 'lead_modal_open' ? '–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏' :
                     conversion.action === 'lead_backend_success' ? '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ' :
                     conversion.action === 'lead_backend_error' ? '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏' :
                     conversion.action === 'bot_start' ? '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º' :
                     conversion.action === 'lead_processed' ? '–ó–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ –±–æ—Ç–µ' :
                     conversion.action === 'admin_leads_request' ? '–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫' :
                     conversion.action === 'bot_interaction' ? '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º' :
                     conversion.action === 'bot_text_message' ? '–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ' :
                     conversion.action}
                  </h3>
                  <div className="conversion-page">{conversion.page}</div>
                  {conversion.metadata && Object.keys(conversion.metadata).length > 0 && (
                    <div className="conversion-metadata">
                      {Object.entries(conversion.metadata).map(([key, value]) => (
                        <span key={key} className="metadata-item">
                          {key}: {String(value)}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
                <div className="conversion-stats">
                  <div className="conversion-count">{formatNumber(conversion.count)}</div>
                  <div className="conversion-rate">{conversion.rate}%</div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –ó–∞—è–≤–∫–∏ */}
        <div className="analytics-section">
          <h2>üìù –ó–∞—è–≤–∫–∏ ({getPeriodLabel()})</h2>
          <div className="leads-grid">
            {conversions.filter(c => 
              c.action.includes('lead') || 
              c.action.includes('bot') || 
              c.action === 'admin_leads_request'
            ).map((conversion, index) => (
              <div key={`lead-${index}`} className="lead-card">
                <div className="lead-icon">
                  {conversion.action === 'lead_submit_whatsapp' ? 'üì±' :
                   conversion.action === 'lead_submit_telegram' ? 'üì±' :
                   conversion.action === 'lead_modal_open' ? 'üìã' :
                   conversion.action === 'lead_backend_success' ? '‚úÖ' :
                   conversion.action === 'lead_backend_error' ? '‚ùå' :
                   conversion.action === 'lead_processed' ? 'üîó' :
                   conversion.action === 'bot_start' ? 'ü§ñ' :
                   conversion.action === 'admin_leads_request' ? 'üë®‚Äçüíº' :
                   conversion.action === 'bot_interaction' ? 'üîÑ' :
                   conversion.action === 'bot_text_message' ? 'üí¨' :
                   'üìù'}
                </div>
                <div className="lead-info">
                  <h3>
                    {conversion.action === 'lead_submit_whatsapp' ? '–ó–∞—è–≤–∫–∞ WhatsApp' :
                     conversion.action === 'lead_submit_telegram' ? '–ó–∞—è–≤–∫–∞ Telegram' :
                     conversion.action === 'lead_modal_open' ? '–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏' :
                     conversion.action === 'lead_backend_success' ? '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ' :
                     conversion.action === 'lead_backend_error' ? '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏' :
                     conversion.action === 'lead_processed' ? '–ó–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ –±–æ—Ç–µ' :
                     conversion.action === 'bot_start' ? '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º' :
                     conversion.action === 'admin_leads_request' ? '–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫' :
                     conversion.action === 'bot_interaction' ? '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º' :
                     conversion.action === 'bot_text_message' ? '–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ' :
                     conversion.action}
                  </h3>
                  <div className="lead-page">{conversion.page}</div>
                  {conversion.metadata && Object.keys(conversion.metadata).length > 0 && (
                    <div className="lead-metadata">
                      {Object.entries(conversion.metadata).map(([key, value]) => (
                        <span key={key} className="metadata-item">
                          {key}: {String(value)}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
                <div className="lead-stats">
                  <div className="lead-count">{formatNumber(conversion.count)}</div>
                  <div className="lead-rate">{conversion.rate}%</div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤/–∫–∞—Ä—Ç–æ—á–µ–∫ */}
        <div className="analytics-section">
          <h2>üß© –ü—Ä–æ—Å–º–æ—Ç—Ä—ã –∫–∞—Ä—Ç–æ—á–µ–∫ ({getPeriodLabel()})</h2>
          {productViews && productViews.length > 0 ? (
            <div className="products-grid">
              {productViews.map((group, idx) => (
                <div key={idx} className="product-group-card">
                  <div className="product-group-header">
                    <h3>{group.type === 'presentation' ? '–°–≤–∞–¥–µ–±–Ω—ã–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏' : group.type === 'invitation' ? '–í–∏–¥–µ–æ‚Äë–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è' : '–î—Ä—É–≥–æ–µ'}</h3>
                    <div className="product-group-total">{formatNumber(group.total)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
                  </div>
                  <div className="product-titles-list">
                    {group.titles.map((t, i) => (
                      <div key={i} className="product-title-item">
                        <div className="product-title-name">{t.title}</div>
                        <div className="product-title-count">{formatNumber(t.count)}</div>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div className="no-data">
              –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
            </div>
          )}
        </div>

        {/* –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –≤ —á–∞—Ç */}
        <div className="analytics-section">
          <h2>üí¨ –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –≤ —á–∞—Ç ({getPeriodLabel()})</h2>
          <div className="chat-stats-grid">
            <div className="chat-stat-card">
              <div className="chat-stat-icon">üí¨</div>
              <div className="chat-stat-info">
                <h3>–°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</h3>
                <div className="chat-stat-value">{formatNumber(chatEngagement.messagesSent)}</div>
              </div>
            </div>
            <div className="chat-stat-card">
              <div className="chat-stat-icon">üì§</div>
              <div className="chat-stat-info">
                <h3>–§–∞–π–ª–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</h3>
                <div className="chat-stat-value">{formatNumber(chatEngagement.filesSent)}</div>
              </div>
            </div>
            <div className="chat-stat-card">
              <div className="chat-stat-icon">‚è±Ô∏è</div>
              <div className="chat-stat-info">
                <h3>–í—Ä–µ–º—è –≤ —á–∞—Ç–µ</h3>
                <div className="chat-stat-value">{formatDuration(chatEngagement.avgTimeInChat)}</div>
              </div>
            </div>
            <div className="chat-stat-card">
              <div className="chat-stat-icon">üë•</div>
              <div className="chat-stat-info">
                <h3>–ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤</h3>
                <div className="chat-stat-value">{formatNumber(chatEngagement.activeChats)}</div>
              </div>
            </div>
          </div>
        </div>

        {/* –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ –∏ —Å–µ—Å—Å–∏–∏ */}
        <div className="analytics-section">
          <h2>üë• –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ –∏ —Å–µ—Å—Å–∏–∏ ({getPeriodLabel()})</h2>
          <div className="sessions-stats">
            <div className="session-stat">
              <h3>–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏</h3>
              <div className="session-value">
                {formatNumber(
                  visitorMetric === 'ip' ? (analytics.visitors?.byIp?.total || userSessions.total) :
                  visitorMetric === 'session' ? (analytics.visitors?.bySession?.total || userSessions.total) :
                  (analytics.visitors?.hybrid?.total || userSessions.total)
                )}
              </div>
            </div>
            <div className="session-stat">
              <h3>–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π</h3>
              <div className="session-value">{formatNumber(userSessions.totalSessions)}</div>
            </div>
            <div className="session-stat">
              <h3>–ù–æ–≤—ã–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏</h3>
              <div className="session-value">
                {formatNumber(
                  visitorMetric === 'ip' ? (analytics.visitors?.byIp?.new ?? userSessions.newVisitors) :
                  visitorMetric === 'session' ? (analytics.visitors?.bySession?.new ?? userSessions.newVisitors) :
                  (analytics.visitors?.hybrid?.new ?? userSessions.newVisitors)
                )}
              </div>
            </div>
            <div className="session-stat">
              <h3>–í–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ—Å—è</h3>
              <div className="session-value">
                {formatNumber(
                  visitorMetric === 'ip' ? (analytics.visitors?.byIp?.returning ?? userSessions.returningVisitors) :
                  visitorMetric === 'session' ? (analytics.visitors?.bySession?.returning ?? userSessions.returningVisitors) :
                  (analytics.visitors?.hybrid?.returning ?? userSessions.returningVisitors)
                )}
              </div>
            </div>
            <div className="session-stat">
              <h3>–°—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h3>
              <div className="session-value">{formatDuration(userSessions.avgDuration)}</div>
            </div>
          </div>
        </div>

        {/* –¢—Ä–µ–Ω–¥—ã */}
        {trends && (
          <div className="analytics-section">
            <h2>üìà –¢—Ä–µ–Ω–¥—ã ({getPeriodLabel()})</h2>
            <div className="trends-grid">
              {trends.map((trend, index) => (
                <div key={index} className="trend-card">
                  <div className="trend-header">
                    <h3>{trend.metric}</h3>
                    <div className={`trend-change ${trend.change >= 0 ? 'positive' : 'negative'}`}>
                      {trend.change >= 0 ? '+' : ''}{trend.change}%
                    </div>
                  </div>
                  <div className="trend-chart">
                    {trend.data.map((point, i) => (
                      <div key={i} className="trend-point" style={{ height: `${point}%` }}></div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ */}
        {topReferrers && (
          <div className="analytics-section">
            <h2>üîó –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ ({getPeriodLabel()})</h2>
            <div className="referrers-list">
              {topReferrers.map((referrer, index) => (
                <div key={index} className="referrer-item">
                  <div className="referrer-rank">#{index + 1}</div>
                  <div className="referrer-info">
                    <div className="referrer-name">{referrer.source}</div>
                    <div className="referrer-url">{referrer.url}</div>
                  </div>
                  <div className="referrer-stats">
                    <div className="referrer-visits">{formatNumber(referrer.visits)} –≤–∏–∑–∏—Ç–æ–≤</div>
                    <div className="referrer-percentage">{referrer.percentage}%</div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ë—Ä–∞—É–∑–µ—Ä—ã –∏ –û–° */}
        <div className="analytics-section">
          <h2>üåê –ë—Ä–∞—É–∑–µ—Ä—ã –∏ –û–° ({getPeriodLabel()})</h2>
          <div className="tech-stats-grid">
            <div className="tech-section">
              <h3>–ë—Ä–∞—É–∑–µ—Ä—ã</h3>
              {browserStats.map((browser, index) => (
                <div key={index} className="tech-item">
                  <div className="tech-name">{browser.name}</div>
                  <div className="tech-bar">
                    <div className="tech-bar-fill" style={{ width: `${browser.percentage}%` }}></div>
                  </div>
                  <div className="tech-percentage">{browser.percentage}%</div>
                </div>
              ))}
            </div>
            <div className="tech-section">
              <h3>–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã</h3>
              {osStats.map((os, index) => (
                <div key={index} className="tech-item">
                  <div className="tech-name">{os.name}</div>
                  <div className="tech-bar">
                    <div className="tech-bar-fill" style={{ width: `${os.percentage}%` }}></div>
                  </div>
                  <div className="tech-percentage">{os.percentage}%</div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –ü–æ—á–∞—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
        {hourlyActivity && (
          <div className="analytics-section">
            <h2>üïê –ü–æ—á–∞—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ({getPeriodLabel()})</h2>
            <div className="hourly-chart">
              {hourlyActivity.map((hour, index) => (
                <div key={index} className="hour-bar">
                  <div className="hour-label">{hour.hour}:00</div>
                  <div className="hour-value" style={{ height: `${hour.percentage}%` }}>
                    <span className="hour-count">{formatNumber(hour.count)}</span>
                  </div>
            </div>
          ))}
        </div>
      </div>
        )}

        {/* –ù–µ–¥–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
        {weeklyActivity && (
          <div className="analytics-section">
            <h2>üìÖ –ù–µ–¥–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ({getPeriodLabel()})</h2>
            <div className="weekly-chart">
              {weeklyActivity.map((day, index) => (
                <div key={index} className="day-bar">
                  <div className="day-label">{day.day}</div>
                  <div className="day-value" style={{ height: `${day.percentage}%` }}>
                    <span className="day-count">{formatNumber(day.count)}</span>
                  </div>
                  </div>
              ))}
                  </div>
                </div>
        )}
      </div>
    );
  };

  const renderOrders = () => (
    <div className="orders-container">
      <div className="orders-header">
        <h2>üõí –ó–∞–∫–∞–∑—ã ({orders.length})</h2>
        <button onClick={fetchOrders} className="refresh-btn">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
      </div>
      
      <div className="orders-grid">
        {orders.map((order) => (
          <div key={order._id} className="order-item">
            <div className="order-header">
              <div className="order-id">#{order.orderId}</div>
              <div className="order-status">
                <span className={`status-badge ${order.paymentStatus}`}>
                  {order.paymentStatus === 'paid' ? '‚úÖ –û–ø–ª–∞—á–µ–Ω' :
                   order.paymentStatus === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' :
                   order.paymentStatus === 'cancelled' ? '‚ùå –û—Ç–º–µ–Ω–µ–Ω' :
                   order.paymentStatus === 'failed' ? 'üí• –û—à–∏–±–∫–∞' : '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
                </span>
              </div>
            </div>
            <div className="order-details">
              <div className="order-product">{order.productTitle}</div>
              <div className="order-variant">
                {order.variant === 'anim' ? '–° –æ–∂–∏–≤–ª–µ–Ω–∏–µ–º' : '–ë–µ–∑ –æ–∂–∏–≤–ª–µ–Ω–∏—è'}
                {order.selection && ` - ${order.selection}`}
              </div>
              <div className="order-prices">
                <div className="total-price">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {order.totalPrice.toLocaleString('ru-RU')} ‚ÇΩ</div>
                <div className="prepay-price">–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: {order.prepayAmount.toLocaleString('ru-RU')} ‚ÇΩ</div>
                <div className="remaining-price">–û—Å—Ç–∞–ª–æ—Å—å: {(order.totalPrice - order.prepayAmount).toLocaleString('ru-RU')} ‚ÇΩ</div>
              </div>
            </div>
            <div className="order-customer">
              <div className="customer-name">{order.customerInfo?.name || '–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
              <div className="customer-email">{order.customerInfo?.email || 'Email –Ω–µ —É–∫–∞–∑–∞–Ω'}</div>
              <div className="customer-phone">{order.customerInfo?.phone || '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω'}</div>
            </div>
            <div className="order-footer">
              <div className="order-date">{formatDate(order.createdAt)}</div>
              {order.yookassaPaymentId && (
                <div className="payment-id">ID: {order.yookassaPaymentId}</div>
              )}
            </div>
            </div>
          ))}
        </div>
      </div>
  );

  const renderChats = () => (
    <div className="chats-container">
      <div className="chats-header">
        <h2>üí¨ –ß–∞—Ç—ã ({chats.length})</h2>
        <button onClick={fetchChats} className="refresh-btn">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
      </div>
      
      <div className="chats-grid">
        <div className="chats-list">
          {chats.map((chat) => (
            <div 
              key={chat._id} 
              className={`chat-item ${selectedChat === chat._id ? 'active' : ''}`}
              onClick={() => fetchChatMessages(chat._id)}
            >
              <div className="chat-header">
                <div className="chat-id">#{chat._id.slice(-6)}</div>
                <div className="chat-date">{formatDate(chat.lastMessage?.createdAt || chat.lastMessage?.timestamp)}</div>
              </div>
              <div className="chat-preview">
                {chat.lastMessage?.text 
                  ? chat.lastMessage.text.substring(0, 50) + (chat.lastMessage.text.length > 50 ? '...' : '')
                  : '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π'
                }
              </div>
              <div className="chat-stats">
                <span className="chat-messages">
                  {chat.lastMessage?.sender === 'user' ? 'üë§' : 'ü§ñ'} 
                  {chat.lastMessage?.sender === 'user' ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : '–ê–¥–º–∏–Ω'}
                </span>
                <span className="chat-count">
                  {chatCounts[chat._id] || 0} —Å–æ–æ–±—â–µ–Ω–∏–π
                </span>
                {chat.lastMessage?.fileUrl && (
                  <span className="chat-files">üìé</span>
                )}
              </div>
            </div>
          ))}
        </div>

        {selectedChat && (
          <div className="chat-messages-container">
            <div className="messages-header">
              <h3>–ß–∞—Ç #{selectedChat.slice(-6)}</h3>
              <button onClick={() => setSelectedChat(null)} className="close-btn">‚úï</button>
            </div>
            <div className="messages-list">
              {chatMessages.map((message) => (
                <div key={message._id} className={`message ${message.sender === 'user' ? 'user' : 'admin'}`}>
                  <div className="message-header">
                    <span className="message-sender">
                      {message.sender === 'user' ? 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : 'ü§ñ –ê–¥–º–∏–Ω'}
                    </span>
                    <span className="message-time">{formatDate(message.createdAt || message.timestamp)}</span>
                    <button 
                      onClick={() => deleteMessage(message._id)}
                      className="delete-btn"
                    >
                      üóëÔ∏è
                    </button>
                  </div>
                  <div className="message-content">
                    {message.text && <div className="message-text">{message.text}</div>}
                    {message.fileUrl && (
                      <div className="message-file">
                        <a href={message.fileUrl} target="_blank" rel="noopener noreferrer">
                          üìé {message.fileName || '–§–∞–π–ª'}
                        </a>
                  </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
        </div>
        )}
      </div>
    </div>
  );

  if (!isAuthenticated) {
    return (
      <div className="admin-login">
        <div className="login-form">
          <h1>üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h1>
          <form onSubmit={handleLogin}>
            <input
              type="password"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
            <button type="submit">–í–æ–π—Ç–∏</button>
          </form>
      </div>
    </div>
  );
} 

  return (
    <div className="admin-panel">
      <div className="admin-header">
        <h1>üéõÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –§–µ–π–µ—Ä–æ</h1>
        <div className="admin-tabs">
          <button 
            className={activeTab === 'chats' ? 'active' : ''} 
            onClick={() => setActiveTab('chats')}
          >
            üí¨ –ß–∞—Ç—ã
          </button>
          <button 
            className={activeTab === 'orders' ? 'active' : ''} 
            onClick={() => setActiveTab('orders')}
          >
            üõí –ó–∞–∫–∞–∑—ã
          </button>
          <button 
            className={activeTab === 'analytics' ? 'active' : ''} 
            onClick={() => setActiveTab('analytics')}
          >
            üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
          </button>
        </div>
        <button onClick={() => setIsAuthenticated(false)} className="logout-btn">
          üö™ –í—ã–π—Ç–∏
        </button>
      </div>

      <div className="admin-content">
        {activeTab === 'chats' ? renderChats() : 
         activeTab === 'orders' ? renderOrders() : 
         renderAnalytics()}
      </div>
    </div>
  );
};

export default AdminPanel; 