import React, { useEffect, useState } from 'react';
import './PaymentSuccess.css';

export default function PaymentSuccess({ orderId, onClose }) {
  const [order, setOrder] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (orderId) {
      fetchOrderDetails();
    }
  }, [orderId]);

  const fetchOrderDetails = async () => {
    try {
      const response = await fetch(`https://svadba2.onrender.com/api/orders/${orderId}`);
      if (response.ok) {
        const orderData = await response.json();
        setOrder(orderData);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞:', error);
    } finally {
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="payment-success-page">
        <div className="success-container">
          <div className="loading-spinner">‚è≥</div>
          <h2>–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ...</h2>
        </div>
      </div>
    );
  }

  if (!order) {
    return (
      <div className="payment-success-page">
        <div className="success-container">
          <div className="error-icon">‚ùå</div>
          <h2>–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
          <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ.</p>
          <a href="/" className="home-btn">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
        </div>
      </div>
    );
  }

  return (
    <div className="payment-success-page">
      <div className="success-container">
        <div className="success-icon">‚úÖ</div>
        <h1>–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!</h1>
        
        <div className="order-details">
          <h2>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h2>
          <div className="detail-row">
            <span className="label">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</span>
            <span className="value">#{order.orderId}</span>
          </div>
          <div className="detail-row">
            <span className="label">–£—Å–ª—É–≥–∞:</span>
            <span className="value">{order.productTitle}</span>
          </div>
          <div className="detail-row">
            <span className="label">–í–∞—Ä–∏–∞–Ω—Ç:</span>
            <span className="value">
              {order.variant === 'anim' ? '–° –æ–∂–∏–≤–ª–µ–Ω–∏–µ–º' : '–ë–µ–∑ –æ–∂–∏–≤–ª–µ–Ω–∏—è'}
              {order.selection && ` - ${order.selection}`}
            </span>
          </div>
          <div className="detail-row">
            <span className="label">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</span>
            <span className="value">{order.totalPrice.toLocaleString('ru-RU')} ‚ÇΩ</span>
          </div>
          <div className="detail-row">
            <span className="label">–û–ø–ª–∞—á–µ–Ω–æ:</span>
            <span className="value success">+{order.prepayAmount.toLocaleString('ru-RU')} ‚ÇΩ</span>
          </div>
          <div className="detail-row">
            <span className="label">–û—Å—Ç–∞–ª–æ—Å—å –æ–ø–ª–∞—Ç–∏—Ç—å:</span>
            <span className="value remaining">
              {(order.totalPrice - order.prepayAmount).toLocaleString('ru-RU')} ‚ÇΩ
            </span>
          </div>
        </div>

        <div className="customer-info">
          <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h3>
          <div className="detail-row">
            <span className="label">–ò–º—è:</span>
            <span className="value">{order.customerInfo?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
          </div>
          <div className="detail-row">
            <span className="label">Email:</span>
            <span className="value">{order.customerInfo?.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
          </div>
          <div className="detail-row">
            <span className="label">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
            <span className="value">{order.customerInfo?.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
          </div>
        </div>

        <div className="next-steps">
          <h3>–ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
          <div className="steps-list">
            <div className="step">
              <div className="step-number">1</div>
              <div className="step-content">
                <h4>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h4>
                <p>–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.</p>
              </div>
            </div>
            <div className="step">
              <div className="step-number">2</div>
              <div className="step-content">
                <h4>–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º</h4>
                <p>–ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –Ω–∞—á–Ω—É—Ç —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º —Å–æ–≥–ª–∞—Å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.</p>
              </div>
            </div>
            <div className="step">
              <div className="step-number">3</div>
              <div className="step-content">
                <h4>–§–∏–Ω–∞–ª—å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</h4>
                <p>–ü–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è 70%.</p>
              </div>
            </div>
          </div>
        </div>

        <div className="contact-info">
          <h3>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?</h3>
          <p>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º:</p>
          <div className="contact-buttons">
            <a href="https://t.me/feyero_bot" className="contact-btn telegram">
              üí¨ Telegram
            </a>
            <a href="https://wa.me/79004512345" className="contact-btn whatsapp">
              üì± WhatsApp
            </a>
          </div>
        </div>

        <div className="actions">
          <a href="/" className="home-btn">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
          <button 
            onClick={() => window.print()} 
            className="print-btn"
          >
            üñ®Ô∏è –†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
}
