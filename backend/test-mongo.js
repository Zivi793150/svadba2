require('dotenv').config();
const mongoose = require('mongoose');

async function testMongoConnection() {
  console.log('=== –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB ===\n');
  
  try {
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...');
    await mongoose.connect(process.env.MONGO_URL, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
    console.log('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π:');
    
    try {
      const { PageView, ButtonClick, UserSession, Conversion, ChatEngagement } = require('./analytics.model');
      console.log('‚úÖ –ú–æ–¥–µ–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
      const pageViewCount = await PageView.countDocuments();
      const buttonClickCount = await ButtonClick.countDocuments();
      const userSessionCount = await UserSession.countDocuments();
      const conversionCount = await Conversion.countDocuments();
      const chatEngagementCount = await ChatEngagement.countDocuments();
      
      console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π:');
      console.log(`  PageView: ${pageViewCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      console.log(`  ButtonClick: ${buttonClickCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      console.log(`  UserSession: ${userSessionCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      console.log(`  Conversion: ${conversionCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      console.log(`  ChatEngagement: ${chatEngagementCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π:', error.message);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –º–æ–¥–µ–ª–∏
    try {
      const Message = require('./message.model');
      const Order = require('./order.model');
      const Lead = require('./lead.model');
      
      const messageCount = await Message.countDocuments();
      const orderCount = await Order.countDocuments();
      const leadCount = await Lead.countDocuments();
      
      console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π:');
      console.log(`  Message: ${messageCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      console.log(`  Order: ${orderCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      console.log(`  Lead: ${leadCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥—Ä—É–≥–∏—Ö –º–æ–¥–µ–ª–µ–π:', error.message);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error.message);
  } finally {
    if (mongoose.connection.readyState === 1) {
      await mongoose.disconnect();
      console.log('\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
    }
  }
  
  console.log('\n=== –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===');
}

testMongoConnection().catch(console.error);
