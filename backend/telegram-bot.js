const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();
const { getLead, deleteLead } = require('./leadStore');
const Lead = require('./lead.model');
const axios = require('axios');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
const trackAnalytics = async (action, metadata = {}) => {
  try {
    const API_URL = process.env.API_URL || 'https://svadba2.onrender.com';
    await axios.post(`${API_URL}/api/analytics/conversion`, {
      action, 
      page: '/telegram_bot', 
      metadata,
      userAgent: 'TelegramBot',
      source: 'telegram_bot'
    });
  } catch (e) {
    console.error('Analytics send failed:', e);
  }
};

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const token = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_IDS = String(process.env.ADMIN_TELEGRAM_IDS || process.env.ADMIN_TELEGRAM_ID || '')
  .split(/[\s,]+/)
  .filter(Boolean)
  .map(s => Number(s))
  .filter(n => !Number.isNaN(n));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!token) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
  console.error('–î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Render');
  process.exit(1);
}

console.log('‚úÖ TELEGRAM_BOT_TOKEN –Ω–∞–π–¥–µ–Ω');
console.log('‚ÑπÔ∏è ADMIN_TELEGRAM_IDS:', ADMIN_IDS);
const bot = new TelegramBot(token, { polling: false }); // –í –ø—Ä–æ–¥–µ —Ä–∞–±–æ—Ç–∞–µ–º —á–µ—Ä–µ–∑ webhook

// –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userStates = new Map();

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —á–∞—Ç—É –Ω–∞ —Å–∞–π—Ç–µ)
const quickQuestions = {
  '–í–∏–¥–µ–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è ‚Äî –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è': {
    answer: `**–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:** 
**–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**  
–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ —Å–≤–æ–∏—Ö –≥–æ—Å—Ç–µ–π —Ñ–µ–µ—Ä–∏—á–Ω–æ –∏ —Å–æ–∑–¥–∞–π—Ç–µ WOW-—ç—Ñ—Ñ–µ–∫—Ç –µ—â–µ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ!

–ù–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —É–¥–∏–≤—è—Ç –∏ –ø—Ä–æ–∏–∑–≤–µ–¥—É—Ç WOW
‚Äì —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞ –≤–∞—à–∏—Ö –≥–æ—Å—Ç–µ–π. –û–Ω–∏ –∑–∞–ø–æ–º–Ω—è—Ç –≤–∞—à—É —Å–≤–∞–¥—å–±—É –µ—â–µ —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏ —Ç–æ—á–Ω–æ–∑–∞—Ö–æ—Ç—è—Ç –Ω–∞ –Ω–µ–µ –ø—Ä–∏–π—Ç–∏.

–í–æ–∑–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –¥–ª—è –≤—Å–µ—Ö,–±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è, –∫–∞–∫ –≤ —à–∞–±–ª–æ–Ω–µ. –ê –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
–≥–æ—Å—Ç—è –æ—Ç–¥–µ–ª—å–Ω–æ.`,
    quickActions: ['–ó–∞–∫–∞–∑–∞—Ç—å', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']
  },
  '–í–∏–¥–µ–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è ‚Äî —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏': {
    answer: `**–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏:** 
**–ù–µ–∏–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:** 
–ó–∞–º–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –±–µ–∑ –∏–º–µ–Ω–∏ ‚Äì 2000 —Ä./ —Å—Ä–æ–∫ ‚Äì1 –¥–µ–Ω—å
 **–ò–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:**  
–° –æ–±—Ä–∞—â–µ–Ω–∏–µ–º –∏ —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–º–µ–Ω–∏ –≤–Ω–∞—á–∞–ª–µ: 
–¥–æ 25 –∏–º–µ–Ω ‚Äì 3000 —Ä, 
–¥–æ 50 –∏–º–µ–Ω ‚Äì 4000 —Ä, 
 51-100 –∏–º–µ–Ω ‚Äì 5000 —Ä 
–°—Ä–æ–∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è 2-5 –¥–Ω–µ–π, –≤–æ–∑–º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏.`,
    quickActions: ['–ó–∞–∫–∞–∑–∞—Ç—å', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']
  },
  '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ?': {
    answer: `–û–ø–∏—à–∏—Ç–µ –∫–∞–∫ –≤–∏–¥–∏—Ç–µ –∏ –º—ã —Å–∫–∞–∂–µ–º –≤–æ–∑–º–æ–∂–Ω–æ –ª–∏ —ç—Ç–æ.`,
    quickActions: ['–ó–∞–∫–∞–∑–∞—Ç—å', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']
  },
  '–°–≤–∞–¥–µ–±–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Äî –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è': {
    answer: `**–°–≤–∞–¥–µ–±–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è**
**–û–ø–∏—Å–∞–Ω–∏–µ:** –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –ª—é–±–≤–∏ ‚Äî –¥–æ–ª–∂–Ω–∞ —Å—Ç–∞—Ç—å —Å–µ—Ä–¥—Ü–µ–º –≤–∞—à–µ–≥–æ —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞.

–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π –Ω–µ –∑–Ω–∞—é—Ç –æ –º–æ–ª–æ–¥–æ–∂—ë–Ω–∞—Ö –ø–æ—Ä–æ–π –¥–∞–∂–µ —Å–∞–º—ã—Ö –≥–ª–∞–≤–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤.
–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö —Ç–∞–∫ —á—Ç–æ–±—ã –æ–Ω–∏ –∑–∞–ø–æ–º–Ω–∏–ª–∏ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –Ω–∞–≤—Å–µ–≥–¥–∞. –ú—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏–º –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω–æ–µ –≤–∏–¥–µ–æ‚Äë—à–æ—É ‚Äî —Å —á—ë—Ç–∫–æ–π –¥—Ä–∞–º–∞—Ç—É—Ä–≥–∏–µ–π, –∫—Ä–∞—Å–∏–≤—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏ –∏ –º—É–∑—ã–∫–æ–π ‚Äî —á—Ç–æ–±—ã —ç—Ç–æ —Ç—Ä–æ–Ω—É–ª–æ –¥–æ —Å–ª–µ–∑ –∫–∞–∂–¥–æ–≥–æ.

1. –≠–∫—Ä–∞–Ω: –î–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º —ç–∫—Ä–∞–Ω —Å –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏ 16:9 –∏–ª–∏ 16:10. –î–ª—è —ç–∫—Ä–∞–Ω–∞ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏–π –µ–≥–æ –ø—Ä–∏–¥–µ—Ç—Å—è –∏–∑–º–µ–Ω—è—Ç—å. –ï—Å–ª–∏ —É –≤–∞—Å —ç–∫—Ä–∞–Ω —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏- —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –µ–≥–æ —Ä–∞–∑–º–µ—Ä—ã (—à–∏—Ä–∏–Ω—É –∏ –¥–ª–∏–Ω—É) ‚Äî –º—ã —Å–∫–∞–∂–µ–º –≤–æ–∑–º–æ–∂–Ω–æ –ª–∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –ø–æ–¥ –Ω–µ–≥–æ.
–ü–æ–¥ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω –µ–≥–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–ª—å–∑—è.

2. –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —ç–∫—Ä–∞–Ω - —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–µ —Å–≤–∞–¥–µ–±–Ω–æ–µ –≤–∏–¥–µ–æ-—à–æ—É.

3. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–æ—Ç–æ –∏ —Ä–∞–∑–≤–æ—Ä–æ—Ç–æ–≤. –í —à–∞–±–ª–æ–Ω–µ: 4 —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ (16 —Ñ–æ—Ç–æ). –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–≤–æ—Ä–æ—Ç—ã.

4. –û–ø–∏—Å–∞–Ω–∏—è –∫ —Ñ–æ—Ç–æ ‚Äî –¥–æ~300 —Å–∏–º–≤–æ–ª–æ–≤. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –ª—É—á—à–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∏ —Ä–∞–∑–≤–æ—Ä–æ—Ç—ã, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–º.

5. –û–∂–∏–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ (–∫–∞–∫ –≤ —à–∞–±–ª–æ–Ω–µ). –ú–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∏ –±–µ–∑ –æ–∂–∏–≤–ª–µ–Ω–∏—è.

6. –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –ø–æ–¥–±–ª–æ–∂–∫–∞ –ø–æ–∫–∞ –≤ –æ–¥–Ω–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ;

7. –ü—Ä–æ—Ü–µ—Å—Å: –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 30% ‚Üí –ø–æ–ª—É—á–∞–µ—Ç–µ —Ñ–æ—Ä–º—É ‚Üí –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç—ã ‚Üí 1 –ø—Ä–∞–≤–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É ‚Üí —Ñ–∏–Ω–∞–ª –∏ –¥–æ–ø–ª–∞—Ç–∞ 70% ‚Üí –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ.`,
    quickActions: ['–ó–∞–∫–∞–∑–∞—Ç—å', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']
  },
  '–°–≤–∞–¥–µ–±–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Äî —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏': {
    answer: `**–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏:** 
**–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –±–µ–∑ –æ–∂–∏–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ** (—Ñ–æ—Ç–æ –±–µ–∑ –¥–≤–∏–∂–µ–Ω–∏—è) –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–æ 300 —Å–∏–º–≤–æ–ª–æ–≤ –∫ –∫–∞–∂–¥–æ–º—É —Ñ–æ—Ç–æ:

4 —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ (16 —Ñ–æ—Ç–æ, 6:23 –º–∏–Ω) ‚Äì 8000—Ä / —Å—Ä–æ–∫ 3‚Äì4 –¥–Ω—è
5 —Ä–∞–∑–≤–æ—Ä–æ—Ç–æ–≤ (20 —Ñ–æ—Ç–æ, 8 –º–∏–Ω) ‚Äì 8500—Ä / —Å—Ä–æ–∫ 3‚Äì4 –¥–Ω—è
6 —Ä–∞–∑–≤–æ—Ä–æ—Ç–æ–≤ (24 —Ñ–æ—Ç–æ, 10 –º–∏–Ω) ‚Äì 9000—Ä / —Å—Ä–æ–∫ 4‚Äì5 –¥–Ω–µ–π
7 —Ä–∞–∑–≤–æ—Ä–æ—Ç–æ–≤ (28 —Ñ–æ—Ç–æ, 12 –º–∏–Ω) ‚Äì 9500—Ä / —Å—Ä–æ–∫ 4‚Äì5 –¥–Ω–µ–π

**–¶–µ–Ω—ã —Å –æ–∂–∏–≤–ª–µ–Ω–∏–µ–º —Ñ–æ—Ç–æ** –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–æ 300 —Å–∏–º–≤–æ–ª–æ–≤:

4 —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ (16 —Ñ–æ—Ç–æ, 6:23 –º–∏–Ω) ‚Äì 10000—Ä / —Å—Ä–æ–∫ 4‚Äì5 –¥–Ω–µ–π
5 —Ä–∞–∑–≤–æ—Ä–æ—Ç–æ–≤ (20 —Ñ–æ—Ç–æ, 8 –º–∏–Ω) ‚Äì 11000—Ä / —Å—Ä–æ–∫ 4‚Äì5 –¥–Ω–µ–π
6 —Ä–∞–∑–≤–æ—Ä–æ—Ç–æ–≤ (24 —Ñ–æ—Ç–æ, 10 –º–∏–Ω) ‚Äì 11500—Ä / —Å—Ä–æ–∫ 5‚Äì6 –¥–Ω–µ–π
7 —Ä–∞–∑–≤–æ—Ä–æ—Ç–æ–≤ (28 —Ñ–æ—Ç–æ, 12 –º–∏–Ω) ‚Äì 12000—Ä / —Å—Ä–æ–∫ 5‚Äì6 –¥–Ω–µ–π

–ó–∞ –∫–∞–∂–¥—ã–µ 300+ —Å–∏–º–≤–æ–ª–æ–≤ —Å–≤–µ—Ä—Ö +200—Ä (—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ª—É—á—à–µ –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ –∏ —Ä–∞–∑–≤–æ—Ä–æ—Ç—ã ‚Äî —Ç–∞–∫ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –±—É–¥–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ).

–°—Ä–æ–∫–∏ –º–æ–≥—É—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äî –≤—Å–µ –ø–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é.`,
    quickActions: ['–ó–∞–∫–∞–∑–∞—Ç—å', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']
  },
  '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é?': {
    answer: `–í –ø—Ä–∏–Ω—Ü–∏–ø–µ –º–æ–∂–Ω–æ. –û–ø–∏—à–∏—Ç–µ –∫–∞–∫ –≤—ã –µ–µ –≤–∏–¥–∏—Ç–µ. –ò –º—ã —Å–∫–∞–∂–µ–º —Å–º–æ–∂–µ–º –ª–∏ –º—ã —ç—Ç–æ.`,
    quickActions: ['–ó–∞–∫–∞–∑–∞—Ç—å', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']
  }
};

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenu = {
  reply_markup: {
    inline_keyboard: [
      [{ text: 'üé¨ –í–∏–¥–µ–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è', callback_data: 'category_invitations' }],
      [{ text: 'üíí –°–≤–∞–¥–µ–±–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è', callback_data: 'category_presentations' }],
      [{ text: 'üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', callback_data: 'consultation' }]
    ]
  }
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function showMainMenu(chatId, messageId) {
  const text = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:';
  try {
    await bot.editMessageText(text, {
      chat_id: chatId,
      message_id: messageId,
      reply_markup: mainMenu.reply_markup,
      parse_mode: 'Markdown'
    });
  } catch (err) {
    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–≤–æ–µ –ø–æ—Å–ª–µ /start), –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ
    await bot.sendMessage(chatId, text, { reply_markup: mainMenu.reply_markup });
  }
}

function buildCategoryMenu(category) {
  if (category === 'invitations') {
    return {
      text: '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –æ –≤–∏–¥–µ–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è—Ö:',
      markup: {
        inline_keyboard: [
          [{ text: 'üìã –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data: 'question_invitations_info' }],
          [{ text: 'üí∞ –¶–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏', callback_data: 'question_invitations_price' }],
          [{ text: '‚ùì –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑', callback_data: 'question_invitations_custom' }],
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_main' }]
        ]
      }
    };
  }
  return {
    text: '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –æ —Å–≤–∞–¥–µ–±–Ω–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏:',
    markup: {
      inline_keyboard: [
        [{ text: 'üìã –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data: 'question_presentations_info' }],
        [{ text: 'üí∞ –¶–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏', callback_data: 'question_presentations_price' }],
        [{ text: '‚ùì –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑', callback_data: 'question_presentations_custom' }],
        [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_main' }]
      ]
    }
  };
}

async function showCategoryMenu(chatId, messageId, category) {
  const { text, markup } = buildCategoryMenu(category);
  try {
    await bot.editMessageText(text, {
      chat_id: chatId,
      message_id: messageId,
      reply_markup: markup,
      parse_mode: 'Markdown'
    });
  } catch (err) {
    await bot.sendMessage(chatId, text, { reply_markup: markup });
  }
}

const questionKeyToTitle = {
  'invitations_info': '–í–∏–¥–µ–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è ‚Äî –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
  'invitations_price': '–í–∏–¥–µ–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è ‚Äî —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏',
  'invitations_custom': '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ?',
  'presentations_info': '–°–≤–∞–¥–µ–±–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Äî –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
  'presentations_price': '–°–≤–∞–¥–µ–±–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Äî —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏',
  'presentations_custom': '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é?'
};

async function showQuestion(chatId, messageId, category, questionKey) {
  const title = questionKeyToTitle[`${category}_${questionKey}`];
  const questionData = quickQuestions[title];
  if (!questionData) return;

  const quickActionsRow = [
    { text: 'üõí –ó–∞–∫–∞–∑–∞—Ç—å', callback_data: 'order' },
    { text: 'üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', callback_data: 'consultation' }
  ];

  const keyboard = {
    inline_keyboard: [
      quickActionsRow,
      [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º', callback_data: `back_to_category_${category}` }],
      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_main' }]
    ]
  };

  try {
    await bot.editMessageText(questionData.answer, {
      chat_id: chatId,
      message_id: messageId,
      reply_markup: keyboard,
      parse_mode: 'Markdown'
    });
  } catch (err) {
    await bot.sendMessage(chatId, questionData.answer, { reply_markup: keyboard, parse_mode: 'Markdown' });
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start(?:\s+(.*))?/, async (msg, match) => {
  console.log('üéØ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç:', msg.from.first_name, 'ID:', msg.chat.id);
  
  const chatId = msg.chat.id;
  const userName = msg.from.first_name;
  const usernameHandle = msg.from.username ? '@' + msg.from.username : '(–±–µ–∑ username)';
  const startPayload = (match && match[1]) ? String(match[1]) : '';
  
  userStates.set(chatId, { state: 'main' });
  
  // –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ lead_<id> ‚Äî —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å username
  try {
    if (startPayload && startPayload.startsWith('lead_')) {
      const leadId = startPayload.replace('lead_', '');
      const lead = getLead(leadId) || await Lead.findOne({ leadId }).lean().exec();
      if (lead) {
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞
        const userNotification = `‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ #${leadId} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.\n\n–ê –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –Ω–∞—à–∏ —É—Å–ª—É–≥–∏ –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é –Ω–∏–∂–µ.`;
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        for (const adminId of ADMIN_IDS) {
          try {
            const lines = [
              `ÔøΩÔøΩ –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫—Ä—ã–ª –±–æ—Ç–∞ –ø–æ –∑–∞—è–≤–∫–µ #${leadId}`,
              `–ü—Ä–æ—Ñ–∏–ª—å: ${usernameHandle} (id ${msg.from.id})`,
              `–ò–º—è: ${lead.name}`,
              `–°—Ä–æ–∫/–¥–∞—Ç–∞: ${lead.term}`,
              `–ë—é–¥–∂–µ—Ç: ${lead.budget}`,
              `–≠–∫—Ä–∞–Ω: ${lead.screen}`,
              `–ö–æ–Ω—Ç–∞–∫—Ç: ${lead.contact || '-'}`,
              `–ü—Ä–æ–¥—É–∫—Ç: ${lead.product}`,
              `–ò—Å—Ç–æ—á–Ω–∏–∫: ${lead.source}`
            ];
            await bot.sendMessage(adminId, lines.join('\n'));
          } catch (e) {
            console.error('Telegram send lead notification to admin failed:', adminId, e?.response?.body || e?.message || e);
          }
        }
        
        try { await Lead.updateOne({ leadId }, { tgUserId: String(msg.from.id), tgUsername: msg.from.username || null, tgLinkedAt: new Date() }); } catch (e) {}
        deleteLead(leadId);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.sendMessage(chatId, userNotification);
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏
        trackAnalytics('lead_processed', { 
          leadId,
          product: lead.product,
          source: lead.source,
          channel: lead.channel
        });
      }
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –æ lead —Å—Ç–∞—Ä—Ç:', e);
  }

  const welcomeMessage = `üëã –ü—Ä–∏–≤–µ—Ç, ${userName}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Å–≤–∞–¥–µ–±–Ω—ã—Ö –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π! üéâ

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:`;
  
  bot.sendMessage(chatId, welcomeMessage, mainMenu)
    .then(() => {
      console.log('‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
      // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
      trackAnalytics('bot_start', { 
        hasLeadPayload: !!startPayload,
        leadId: startPayload ? startPayload.replace('lead_', '') : null 
      });
    })
    .catch(err => console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', err));
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏
bot.onText(/\/leads(?:\s+(.*))?/, async (msg, match) => {
  if (!ADMIN_IDS.includes(msg.chat.id)) {
    return bot.sendMessage(msg.chat.id, '–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
  }
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
  trackAnalytics('admin_leads_request', { 
    adminId: msg.chat.id,
    adminUsername: msg.from.username || null
  });
  
  const filter = {};
  const textQuery = (match && match[1]) ? String(match[1]).trim() : '';
  try {
    const leads = await Lead.find(filter).sort({ createdAt: -1 }).limit(50).lean().exec();
    if (!leads.length) return bot.sendMessage(msg.chat.id, '–ó–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç.');
    const chunks = [];
    let current = [];
    for (const l of leads) {
      const line = [
        `#${l.leadId} ‚Ä¢ ${new Date(l.createdAt).toLocaleString('ru-RU')}`,
        `–ò–º—è: ${l.name || '-'}`,
        `–°—Ä–æ–∫: ${l.term || '-'}`,
        `–ë—é–¥–∂–µ—Ç: ${l.budget || '-'}`,
        `–≠–∫—Ä–∞–Ω: ${l.screen || '-'}`,
        `–ö–æ–Ω—Ç–∞–∫—Ç: ${l.contact || '-'}`,
        `–ü—Ä–æ–¥—É–∫—Ç: ${l.product || '-'}`,
        `–ò—Å—Ç–æ—á–Ω–∏–∫: ${l.source || '-'}`,
        `–ö–∞–Ω–∞–ª: ${l.channel || '-'}`,
        `–ö–ª–∏–µ–Ω—Ç: ${l.tgUsername ? '@' + l.tgUsername : '(–Ω–µ –≤ –±–æ—Ç–µ)'}${l.tgUserId ? ' ‚Ä¢ id ' + l.tgUserId : ''}`
      ].join('\n');
      current.push(line);
      if (current.join('\n\n').length > 3500) {
        chunks.push(current.join('\n\n'));
        current = [];
      }
    }
    if (current.length) chunks.push(current.join('\n\n'));
    for (const chunk of chunks) {
      await bot.sendMessage(msg.chat.id, chunk);
    }
  } catch (e) {
    console.error('Leads list error:', e);
    bot.sendMessage(msg.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', async (query) => {
  console.log('üîò –ü–æ–ª—É—á–µ–Ω callback –æ—Ç:', query.from.first_name, '–î–∞–Ω–Ω—ã–µ:', query.data);
  
  const chatId = query.message.chat.id;
  const data = query.data;
  const messageId = query.message.message_id;
  const state = userStates.get(chatId) || {};
  const currentCategory = state.category;
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ—Ç–æ–º
  trackAnalytics('bot_interaction', { 
    action: data,
    category: currentCategory,
    userId: query.from.id,
    username: query.from.username
  });
  
  // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
  await bot.answerCallbackQuery(query.id);
  
  if (data.startsWith('category_')) {
    const category = data.replace('category_', '');
    userStates.set(chatId, { state: 'category', category });
    await showCategoryMenu(chatId, messageId, category);
  } else if (data.startsWith('question_')) {
    const parts = data.split('_'); // ['question', '<category>', '<key>']
    const category = parts[1];
    const key = parts[2];
    await showQuestion(chatId, messageId, category, key);
  } else if (data === 'consultation') {
    const text = `üí¨ –î–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä ‚Äî –æ—Ç–≤–µ—Ç–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ.`;
    const backCb = currentCategory ? `back_to_category_${currentCategory}` : 'back_to_main';
    const keyboard = {
      inline_keyboard: [
        [
          { text: 'üì≤ –û—Ç–∫—Ä—ã—Ç—å Telegram', url: 'https://t.me/feiero' },
          { text: 'üì≤ –û—Ç–∫—Ä—ã—Ç—å WhatsApp', url: 'https://wa.me/79004511777' }
        ],
        [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: backCb }]
      ]
    };
    try {
      await bot.editMessageText(text, { chat_id: chatId, message_id: messageId, reply_markup: keyboard });
    } catch (e) {
      await bot.sendMessage(chatId, text, { reply_markup: keyboard });
    }
  } else if (data === 'order') {
    const text = `üõí –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É:`;
    const backCb = currentCategory ? `back_to_category_${currentCategory}` : 'back_to_main';
    const keyboard = {
      inline_keyboard: [
        [ { text: 'üåê –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç–µ', url: 'https://xn--e1aalvju.xn--p1ai' } ],
        [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: backCb }]
      ]
    };
    try {
      await bot.editMessageText(text, { chat_id: chatId, message_id: messageId, reply_markup: keyboard });
    } catch (e) {
      await bot.sendMessage(chatId, text, { reply_markup: keyboard });
    }
  } else if (data.startsWith('back_to_category_')) {
    const category = data.replace('back_to_category_', '');
    userStates.set(chatId, { state: 'category', category });
    await showCategoryMenu(chatId, messageId, category);
  } else if (data === 'back_to_main') {
    userStates.set(chatId, { state: 'main' });
    await showMainMenu(chatId, messageId);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç:', msg.from.first_name, '–¢–µ–∫—Å—Ç:', msg.text);
  
  const chatId = msg.chat.id;
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (!msg.text.startsWith('/')) {
    trackAnalytics('bot_text_message', { 
      userId: msg.from.id,
      username: msg.from.username,
      messageLength: msg.text.length
    });
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ /start, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é
  if (!msg.text.startsWith('/')) {
    const helpMessage = `–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é.`;
    
    const helpKeyboard = {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_main' }]
        ]
      }
    };
    
    bot.sendMessage(chatId, helpMessage, helpKeyboard)
      .then(() => console.log('‚úÖ –ü–æ–º–æ—â—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞'))
      .catch(err => console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–º–æ—â–∏:', err));
  }
});



console.log('Telegram bot started...');

function resolveWebhookBaseUrl() {
  const base = (process.env.TELEGRAM_WEBHOOK_BASE
    || process.env.RENDER_EXTERNAL_URL
    || process.env.FRONTEND_URL
    || 'https://svadba2.onrender.com').trim();
  return base.endsWith('/') ? base.slice(0, -1) : base;
}

// –í–∫–ª—é—á–∞–µ–º webhook-—Ä–µ–∂–∏–º, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–∏–≤ —Å—Ç–∞—Ä—ã–π webhook
(async () => {
  try {
    await bot.deleteWebHook({ drop_pending_updates: true });
    console.log('Webhook —É–¥–∞–ª—ë–Ω (–µ—Å–ª–∏ –±—ã–ª).');
  } catch (e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook:', e.message);
  }

  try {
    const base = resolveWebhookBaseUrl();
    const webhookUrl = `${base}/webhook/telegram`;
    await bot.setWebHook(webhookUrl); // —É node-telegram-bot-api –º–µ—Ç–æ–¥ setWebHook
    console.log('Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞:', webhookUrl);
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', e);
  }
  try {
    const me = await bot.getMe();
    console.log('–ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ @' + me.username + ' (id ' + me.id + ')');
  } catch (e) {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ getMe:', e.message);
  }
  try {
    const info = await bot.getWebHookInfo();
    console.log('Webhook Info:', {
      url: info.url,
      has_custom_certificate: info.has_custom_certificate,
      pending_update_count: info.pending_update_count,
      last_error_message: info.last_error_message,
      last_error_date: info.last_error_date
    });
  } catch (e) {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å getWebHookInfo:', e.message);
  }
})();

module.exports = bot;
